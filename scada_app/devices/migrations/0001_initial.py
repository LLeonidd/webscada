# Generated by Django 4.0.1 on 2022-01-26 12:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccessType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=228)),
                ('description', models.CharField(max_length=228)),
            ],
            options={
                'verbose_name': 'Тип доступа',
                'verbose_name_plural': 'Типы доступа',
                'db_table': 'tb_access_types',
            },
        ),
        migrations.CreateModel(
            name='Box',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=228)),
                ('description', models.CharField(max_length=228)),
                ('priority', models.CharField(max_length=228)),
                ('visible', models.BooleanField(default=True)),
                ('expanded', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Бокс',
                'verbose_name_plural': 'Боксы',
                'db_table': 'tb_boxes',
            },
        ),
        migrations.CreateModel(
            name='DataType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=228)),
                ('description', models.CharField(max_length=228)),
            ],
            options={
                'verbose_name': 'Тип данных',
                'verbose_name_plural': 'Типы данных',
                'db_table': 'tb_data_types',
            },
        ),
        migrations.CreateModel(
            name='DeviceGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Название группы')),
                ('description', models.CharField(max_length=300, verbose_name='Описание группы')),
                ('link', models.CharField(help_text='Из альяса формируется ссылка в панели навигации на группу', max_length=228, verbose_name='Альяс группы')),
                ('icon', models.CharField(blank=True, default='', help_text='css класс иконки', max_length=228, null=True, verbose_name='Css Class иконки')),
                ('priority', models.PositiveSmallIntegerField(default=0, help_text='Чем меньше значение, тем левее расположена группа в панели навигации', verbose_name='Приоритет в панели навигации')),
            ],
            options={
                'verbose_name': 'Группа оборудования',
                'verbose_name_plural': 'Группы оборудования',
                'db_table': 'tb_device_groups',
            },
        ),
        migrations.CreateModel(
            name='LineType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=228)),
                ('description', models.CharField(blank=True, max_length=228, null=True)),
            ],
            options={
                'verbose_name': 'Тип линии',
                'verbose_name_plural': 'Типы линий',
                'db_table': 'tb_line_types',
            },
        ),
        migrations.CreateModel(
            name='Mode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=228, verbose_name='Название')),
                ('value', models.CharField(max_length=228, verbose_name='Значение')),
                ('text', models.CharField(max_length=228, verbose_name='Текст при значении')),
                ('style', models.CharField(max_length=228, verbose_name='Классы при значении')),
            ],
            options={
                'verbose_name': 'Вариант состояний',
                'verbose_name_plural': 'Варианты состояний',
                'db_table': 'tb_modes',
            },
        ),
        migrations.CreateModel(
            name='ModesGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=228)),
                ('description', models.CharField(max_length=228)),
                ('modes', models.ManyToManyField(to='devices.Mode')),
            ],
            options={
                'verbose_name': 'Набор состояний',
                'verbose_name_plural': 'Наборы состояний',
                'db_table': 'tb_modes_groups',
            },
        ),
        migrations.CreateModel(
            name='Plc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=228)),
                ('description', models.CharField(max_length=228)),
            ],
            options={
                'verbose_name': 'Контроллер',
                'verbose_name_plural': 'Контроллеры',
                'db_table': 'tb_plcs',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=228, verbose_name='Имя')),
                ('description', models.CharField(max_length=228, verbose_name='Описание')),
                ('priority', models.PositiveSmallIntegerField(default=0, help_text='Чем меньше значение, тем выше тег расположен в боксе', verbose_name='Приоритет в боксе')),
                ('icon', models.CharField(help_text='CSS class', max_length=228, verbose_name='Значок тега на форме')),
                ('decimal', models.CharField(max_length=228, verbose_name='Количество знаков после запятой')),
                ('info_page', models.BooleanField(default=False, verbose_name='Выводить на сводной странице объкта')),
                ('chart', models.BooleanField(default=False, verbose_name='Выводить в графиках')),
                ('alarm', models.BooleanField(db_index=True, default=False, verbose_name='Аварийный тег')),
                ('comm', models.BooleanField(default=False, verbose_name='Тег признака связи с устройством')),
                ('spm', models.BooleanField(default=False, verbose_name='Использовать в мониторе уставок')),
                ('access', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.accesstype', verbose_name='Доступ')),
                ('box', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.box', verbose_name='Бокс')),
                ('data_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.datatype', verbose_name='Тип данных')),
                ('line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='devices.linetype', verbose_name='Тип линии графиков')),
                ('modes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.modesgroup', verbose_name='Отображать как')),
                ('plc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.plc', verbose_name='Контроллер')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'db_table': 'tb_tags',
            },
        ),
        migrations.CreateModel(
            name='ValueStyle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=228)),
                ('description', models.CharField(blank=True, max_length=228, null=True)),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': 'Единицы измерения',
                'db_table': 'tb_value_styles',
            },
        ),
        migrations.CreateModel(
            name='WidgetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('description', models.CharField(max_length=300, verbose_name='Описание')),
                ('infopage', models.BooleanField(default=True, help_text='Отображать на главной странице объекта', verbose_name='Отображать на главной')),
            ],
            options={
                'verbose_name': 'Виджет',
                'verbose_name_plural': 'Виджеты',
                'db_table': 'tb_widgets',
            },
        ),
        migrations.CreateModel(
            name='WidgetItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('plc', models.CharField(max_length=100)),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.tag')),
                ('widget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.widgettype', verbose_name='Виджет')),
            ],
            options={
                'verbose_name': 'Элемент виджета',
                'verbose_name_plural': 'Элементы виджетов',
                'db_table': 'tb_widget_items',
            },
        ),
        migrations.AddField(
            model_name='tag',
            name='valueStyle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.valuestyle', verbose_name='Единица измерения'),
        ),
        migrations.AddField(
            model_name='box',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='devices.devicegroup'),
        ),
    ]
